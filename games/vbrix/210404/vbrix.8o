# ****************************************************************************
# ***               Vertical Brix v1.0 (C) Paul Robson 1996                ***
# ****************************************************************************
# ****************************************************************************
#
# ****************************************************************************
#
#       r7      lives
#       r8      score
#       r9      bat y
#       ra,rb   location of ball
#       rc,rd   direction of ball
#       re      Number of brix remaining in wall
#
# ****************************************************************************

:const TopLine     	0               # top line of breakout
:const BottomLine  	31              # bottom line of breakout
:const BottomLine1	32							# plus 1
:const LeftSide    	0               # left side of game area
:const RightSide   	63              # right side of game area
:const BrickX      	34              # brick start
:const BrickXCt    	7               # number of bricks across , x
:const BrickYCt    	10              # and y
:const BatX     		2               # bat x position
:const Sound     		1               # 1 sound,0 nosound
:const KeyUp     		1               # up key
:const KeyDown     	4               # down key
:const KeyStart    	7              	# start key

: main
	clear
	Title
: wstart
	v0 := KeyStart                 		# wait for start
	if v0 -key then jump wstart

: Begin
	v8 := 0                        		# score = 0
	v7 := 3                        		# lives = 3
	DrawBorder
  InitBat
#  InitBall
#  DrawBricks
#  DrawScore
#  DrawLives
	v0 := key
: Loop
	MoveBat
  MoveBat
#  MoveBall
#  Collide
	if va != 0 then jump Loop

	vc := 1                        	# ball back out
#  DrawLives		                   	# dec lives
  v7 += -1
#	DrawLives

	v0 := 120                      	# wait 2 secs
	delay := v0
: wait
	v0 := delay
	if v0 != 0 then jump wait
	
	if v7 != 0 then jump Loop
#	DrawLives                   		# erase lives,we've finished

: minus2
	v0 := KeyStart
	if v0 -key then jump minus2
	jump Begin
#	exit

# ****************************************************************************
# ***                         initialise the bat                           ***
# ****************************************************************************
: InitBat
	v9 := 16
	v0 := BatX
	i := BatSpr
	sprite v0 v9 5
	;

: BatSpr
	0b10000000
  0b10000000
  0b10000000
  0b10000000
  0b10000000

# ****************************************************************************
# ***                            move the bat                              ***
# ****************************************************************************
: MoveBat
	v0 := KeyUp
	if v0 key then jump MoveUp
	v0 := KeyDown
	if v0 key then jump MoveDown
	;
	
: MoveUp
	v0 := v9	                   					# move it up
	v0 += -1
	if v0 == TopLine then ;
	jump MoveIt
: MoveDown
	v0 := v9
	v0 += -1
	if v0 != TopLine then ;
	jump MoveIt
: MoveIt
	v1 := BatX                 # redraw the graphic
	i := BatSpr
	sprite  v1 v9 5
  sprite  v1 v0 5
	v9 := v0                  	# do the move
	;


# ****************************************************************************
# ***                           Draw the border                            ***
# ***                         destroys r0,r1,r2,i                          ***
# ****************************************************************************
: DrawBorder
	clear                      			# start with a clear screen
  v0 := LeftSide             			# (r0,r1) and (r0,r2) are start pos
  v1 := TopLine              			# of the horizontal lines
  v2 := BottomLine
  i := Pixel
: DBLoop 
	sprite  v0 v1 1                 # draw the vertical lines
  sprite  v0 v2 1
  v0 += 1
  if v0 != RightSide then jump DBLoop
: DBLoop2
	sprite  v0 v1 1                 # draw the horizontal lines
  v1 += 1
	if v1 != BottomLine1 then jump DBLoop2
	;
: Pixel
	0b10000000                			# pixel used for drawing walls.


# ****************************************************************************
# ***                           draw the title                             ***
# ****************************************************************************
: Title
	v0 := 10
	v1 := 12
	v2 := 9
	v3 := 5
	i := TitleSpr
: TtlLoop
	sprite v0 v1 5
	i += v3
	v0 += 5
	v2 += -1
	if v2 != 0 then jump TtlLoop
	;
	
: TitleSpr
	0b10010000
	0b10010000
	0b10010000
	0b10010000
	0b01100000

	0b11100000
	0b10010000
	0b11100000
	0b10010000
	0b11100000

	0b11100000
	0b10010000
	0b11100000
	0b10010000
	0b10010000
	
	0b00100000
	0b00100000
	0b00100000
	0b00100000
	0b00100000
	
	0b10010000
	0b10010000
	0b01100000
	0b10010000
	0b10010000

	0b00000000
	0b00000000
	0b01100000
	0b00000000
	0b00000000
	
	0b11110000
	0b10010000
	0b11110000
	0b10000000
	0b10000000

	0b11110000
	0b10000000
	0b11110000
	0b00010000
	0b11110000

	0b11100000
	0b10010000
	0b11100000
	0b10010000
	0b10010000
	
	